name: ci

on:
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]



concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci_checks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with ruff
        run: |
          . .venv/bin/activate
          ruff check .

      - name: Import smoke test
        run: |
          . .venv/bin/activate
          python -c "
          # Test core imports
          import fastapi, uvicorn, pydantic, sqlite3
          print('✅ Core dependencies imported successfully')
          
          # Test application imports
          from api.main import app
          from shared.db import init_db
          from pyhole.dns_monitor import parse_pihole_line
          print('✅ Application modules imported successfully')
          
          # Test basic functionality
          conn = init_db()
          print('✅ Database initialization successful')
          
          # Test log parsing
          test_line = 'Dec 21 10:30:45 pihole dnsmasq[1234]: query[A] example.com from 192.168.1.100'
          result = parse_pihole_line(test_line)
          if result:
              print('✅ Log parsing functional')
          else:
              print('⚠️ Log parsing returned None (may need adjustment)')
          
          print('🎉 All smoke tests passed!')
          "

      - name: Run tests
        env:
          SUITE_API_KEY: test-key-ci-${{ github.run_id }}
        run: |
          . .venv/bin/activate
          if [ -d "tests" ] && [ "$(find tests -name '*.py' -not -name '__*' | wc -l)" -gt 0 ]; then
            echo "Running pytest..."
            pytest tests/ -v --tb=short
          else
            echo "No test files found, skipping pytest"
          fi

      - name: Validate installer script
        run: |
          # Check bash syntax
          bash -n install.sh
          echo "✅ Installer script syntax is valid"
          
          # Check if installer is executable
          if [ -x install.sh ]; then
            echo "✅ Installer script is executable"
          else
            echo "❌ Installer script is not executable"
            exit 1
          fi
=======


>>>>>>> origin/main
